// NegotiationManager.js - DEPRECATED stub for backward compatibility
console.log('NegotiationManager.js DEPRECATED STUB loaded');

/**
 * DEPRECATED: NegotiationManager functionality has been moved to TurnManager.js
 * This is a compatibility stub to prevent errors during the transition.
 * 
 * Phase 4: Negotiation is now handled by:
 * - TurnManager.handleNegotiation()
 * - TurnManager.canNegotiate()
 * - MovementEngine.handleNegotiation()
 * - MovementEngine.canNegotiate()
 */
class NegotiationManager {
  constructor(gameBoard) {
    console.warn('NegotiationManager: DEPRECATED - Using compatibility stub. Negotiation functionality moved to TurnManager.');
    this.gameBoard = gameBoard;
    
    // Log deprecation warning
    console.warn('NegotiationManager: This component is deprecated. Use TurnManager negotiation methods instead:');
    console.warn('- TurnManager.handleNegotiation()');
    console.warn('- TurnManager.canNegotiate()');
  }
  
  // Deprecated methods that forward to TurnManager
  isNegotiationAllowed() {
    console.warn('NegotiationManager.isNegotiationAllowed() is deprecated. Use TurnManager.canNegotiate()');
    if (this.gameBoard && this.gameBoard.turnManager) {
      return this.gameBoard.turnManager.canNegotiate();
    }
    return false;
  }
  
  handleNegotiate() {
    console.warn('NegotiationManager.handleNegotiate() is deprecated. Use TurnManager.handleNegotiation()');
    if (this.gameBoard && this.gameBoard.turnManager) {
      return this.gameBoard.turnManager.handleNegotiation();
    }
    console.error('NegotiationManager: TurnManager not available');
  }
  
  getNegotiateButtonTooltip() {
    console.warn('NegotiationManager.getNegotiateButtonTooltip() is deprecated');
    if (this.isNegotiationAllowed()) {
      return \"End your turn, stay on this space, and only take the time penalty\";
    }
    return \"Negotiation is not allowed on this space\";
  }
  
  // Stub event handlers
  handlePlayerMovedEvent(event) {
    // No-op - TurnManager handles this now
  }
  
  handleTurnChangedEvent(event) {
    // No-op - TurnManager handles this now  
  }
  
  handleGameStateChangedEvent(event) {
    // No-op - TurnManager handles this now
  }
  
  handleNegotiationStartedEvent(event) {
    // No-op - TurnManager handles this now
  }
  
  handleNegotiationCompletedEvent(event) {
    // No-op - TurnManager handles this now
  }
  
  cleanup() {
    console.log('NegotiationManager: Compatibility stub cleanup (no-op)');
    // No cleanup needed for stub
  }
}

// Export for backward compatibility
window.NegotiationManager = NegotiationManager;

console.log('NegotiationManager.js DEPRECATED STUB code execution finished');
console.log('NegotiationManager: PHASE 4 - Functionality moved to TurnManager and MovementEngine [2025-05-27]');
